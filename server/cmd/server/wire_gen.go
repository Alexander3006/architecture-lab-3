// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/Alexander3006/architecture-lab-3/server/application/services/diskService"
	"github.com/Alexander3006/architecture-lab-3/server/application/services/machineService"
	"github.com/Alexander3006/architecture-lab-3/server/cmd/server/controllers"
	"github.com/Alexander3006/architecture-lab-3/server/infrastructure/dal"
	"github.com/Alexander3006/architecture-lab-3/server/infrastructure/router"
	"github.com/Alexander3006/architecture-lab-3/server/infrastructure/transport"
)

// Injectors from modules.go:

func ComposeServices() (*controllers.Controllers, error) {
	routerRouter := router.NewRouter()
	db, err := NewDbConnection()
	if err != nil {
		return nil, err
	}
	machineRepository := dal.NewMachineRepository(db)
	diskRepository := dal.NewDiskRepository(db)
	machineServiceMachineService := machineService.NewMachineService(machineRepository, diskRepository)
	diskServiceDiskService := diskService.NewDiskService(diskRepository)
	controllersControllers := controllers.NewControllers(routerRouter, machineServiceMachineService, diskServiceDiskService)
	return controllersControllers, nil
}

func ComposeHttpServer() *transport.HttpServer {
	routerRouter := router.NewRouter()
	httpServer := transport.NewHttpServer(routerRouter)
	return httpServer
}
